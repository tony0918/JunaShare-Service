<?php
define('ORDER_STATUS_DELIVERED', 3);

/**
 * Implements hook_services_resources().
 */
function orders_services_resources() {
  return array(
    'orders' => array(
      'operations' => array(
        'index' => array(
          'help' => t('订单列表'),
          'callback' => 'orders_lists',
          'access arguments' => array('access content'),
          'args' => array(
            array(
              'name' => 'page',
              'optional' => TRUE,
              'source' => array('param' => 'page'),
              'description' => t('页码'),
              'type' => 'int',
            ),
            array(
              'name' => 'status',
              'optional' => TRUE,
              'source' => array('param' => 'status'),
              'description' => t('订单状态'),
              'type' => 'int',
            ),
          ),
        ),
        'update' => array(
          'help' => '更新订单',
          'callback' => 'orders_update',
          'access arguments' => array('access content'),
          'args' => array(
            array(
              'name' => 'orderid',
              'type' => 'string',
              'description' => '订单id',
              'source' => array('path' => 0),
              'optional' => FALSE,
            ),
            array(
              'name' => 'data',
              'type' => 'array',
              'description' => '订单状态',
              'source' => 'data',
              'optional' => FALSE,
            ),
          ),
        )
      ),
      'actions' => array(
        'pre_pay' => array(
          'help' => '预支付',
          'callback' => 'orders_pre_pay',
          'access arguments' => array('access content'),
          'args' => array(
            array(
              'name' => 'orderid',
              'type' => 'int',
              'description' => '订单id',
              'optional' => FALSE,
              'source' => array('data' => 'orderid')
            ),
            array(
              'name' => 'payment_type',
              'type' => 'int',
              'description' => '支付方式',
              'optional' => FALSE,
              'source' => array('data' => 'payment_type')
            ),
          ),
        ),
        'app_payment_callback' => array(
          'help' => '更新订单',
          'callback' => 'orders_alipay_callback',
          'access arguments' => array('access content'),
          'args' => array(
            array(
              'name' => 'data',
              'type' => 'array',
              'description' => '支付宝支付response数据',
              'source' => 'data',
              'optional' => FALSE,
            ),
          ),
        ),
      )
    ),
  );
}

function orders_alipay_callback($appdata) {
  global $user;
  if (!$user->uid) {
    return services_error(t('用户未登录'), 406);
  }
  $appdata = _services_arg_value($appdata, 'data');
  if (!$appdata) {
    return services_error(t('缺少参数'), 406);
  }
  watchdog('支付宝返回app的数据', print_r($appdata, TRUE));
  $out_trade_no = $appdata['out_trade_no'];

  //支付宝交易号
  $trade_no = $appdata['trade_no'];

  //交易状态
  $trade_status = $appdata['trade_status'];
  $app_id = unserialize(variable_get('alipay_settings')['app_id']);

  $orderobj = db_query("SELECT * FROM {product_order} WHERE id=:id", array(':id' => $out_trade_no))->fetch();
  if ($orderobj) {
    if ($orderobj->total_price == $appdata['total_amount'] && $appdata['seller_id'] == $alipay_config['partner'] && $appdata['app_id'] == $app_id) {

      $order = new stdClass();
      $order->status = 1;
      $order->alipay_order_id = $trade_no;
      $order->payment_type = 1;
      drupal_write_record('product_order', $order, 'id');
      return ['success' => 1];
    }
    else {
      return services_error(t('支付数据异常'), 406);
    }
  }
  else {
    return services_error(t('订单id错误'), 406);
  }
}

function orders_menu() {
  $items = array();

  $items['buy'] = array(
    'title' => '支付宝购买测试',
    'description' => '支付宝购买测试',
    'page callback' => 'orders_alipay_buy',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['payment/notify'] = array(
    'title' => '支付宝购买测试',
    'description' => '支付宝购买测试',
    'page callback' => 'orders_notify',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['payment/weixin_notify'] = array(
    'title' => '支付宝购买测试',
    'description' => '支付宝购买测试',
    'page callback' => 'orders_weixin_notify',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['payment/callback'] = array(
    'title' => '支付宝购买测试',
    'description' => '支付宝购买测试',
    'page callback' => 'orders_callback',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['orders'] = array(
    'title' => '支付宝购买测试',
    'description' => '支付宝购买测试',
    'page callback' => 'orders_lists',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['orders/test'] = array(
    'title' => '支付宝购买测试',
    'description' => '支付宝购买测试',
    'page callback' => 'orders_test',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['orders/payment/weixin'] = array(
    'title' => '微信支付',
    'description' => '微信支付',
    'page callback' => 'orders_payementweixin',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  $items['admin/config/content/juna/settings'] = array(
    'title' => '支付配置',
    'description' => '支付相关配置',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('orders_alipay_settings_form'),
    'access arguments' => array('administer payment'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/config/content/juna/settings/alipay'] = array(
    'title' => '支付宝支付配置',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/config/content/juna/settings/weixin'] = array(
    'title' => '微信支付配置',
    'description' => '支付相关配置',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('orders_weixin_settings_form'),
    'access arguments' => array('administer payment'),
    'type' => MENU_LOCAL_TASK,
  );

  $items['admin/config/content/ckeditor/add'] = array(
    'title' => 'Add a new CKEditor profile',
    'description' => 'Configure the rich text editor.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ckeditor_admin_profile_form', 'add'),
    'file' => 'includes/ckeditor.admin.inc',
    'access arguments' => array('administer ckeditor'),
    'type' => MENU_CALLBACK,
  );

  $items['admin/config/content/ckeditor/clone/%ckeditor_profile'] = array(
    'title' => 'Clone the CKEditor profile',
    'description' => 'Configure the rich text editor.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ckeditor_admin_profile_clone_form', 'clone', 5),
    'file' => 'includes/ckeditor.admin.inc',
    'access arguments' => array('administer ckeditor'),
    'type' => MENU_CALLBACK,
  );

  $items['admin/config/content/ckeditor/edit/%ckeditor_profile'] = array(
    'title' => 'Edit the CKEditor profile',
    'description' => 'Configure the rich text editor.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ckeditor_admin_profile_form', 'edit', 5),
    'file' => 'includes/ckeditor.admin.inc',
    'access arguments' => array('administer ckeditor'),
    'type' => MENU_CALLBACK,
  );

  $items['admin/config/content/ckeditor/delete/%ckeditor_profile'] = array(
    'title' => 'Delete the CKEditor profile',
    'description' => 'Configure the rich text editor.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ckeditor_admin_profile_delete_form', 5),
    'file' => 'includes/ckeditor.admin.inc',
    'access arguments' => array('administer ckeditor'),
    'type' => MENU_CALLBACK,
  );

  $items['admin/config/content/ckeditor/addg'] = array(
    'title' => 'Add the CKEditor Global profile',
    'description' => 'Configure the rich text editor.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ckeditor_admin_global_profile_form', 'add'),
    'file' => 'includes/ckeditor.admin.inc',
    'access arguments' => array('administer ckeditor'),
    'type' => MENU_CALLBACK,
  );

  $items['admin/config/content/ckeditor/editg'] = array(
    'title' => 'Edit the CKEditor Global profile',
    'description' => 'Configure the rich text editor.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ckeditor_admin_global_profile_form', 'edit'),
    'file' => 'includes/ckeditor.admin.inc',
    'access arguments' => array('administer ckeditor'),
    'type' => MENU_CALLBACK,
  );

  // Menus for order management.
  $items['admin/juna/orders'] = array(
    'title' => 'Order Management Portal',
    'description' => 'Manage orders.',
    'access arguments' => array('access order management portal'),
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'orders_admin_juna_orders_index',
    'file' => 'includes/orders.pages.inc',
  );
  $items['admin/juna/orders/detail/%/edit'] = array(
    'title' => 'Edit Order',
    'description' => 'Edit order page',
    'access arguments' => array('access order list'),
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('orders_admin_juna_orders_detail_edit_form', 4),
    'file' => 'includes/orders.pages.inc',
  );
  $items['admin/juna/orders/index'] = array(
    'title' => 'Order Management Portal',
    'description' => 'Manage orders.',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'file' => 'includes/orders.pages.inc',
  );
  $items['admin/juna/orders/list'] = array(
    'title' => 'Order List',
    'description' => 'Order list',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('orders_admin_list'),
    'access arguments' => array('access order list'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
    'file' => 'includes/orders.pages.inc',
  );
  return $items;
}

/**
 * Implementation of admin/juna/orders menu callback.
 * @return null|string
 */
function orders_admin_juna_orders_index() {
  return t('Welcome to order management portal.');
}

/**
 * Implementation of hook_permission().
 * @return array
 */
function orders_permission() {
  return array(
    'access order list' => array(
      'title' => t('Access order list'),
    ),
    'access order management portal' => array(
      'title' => t('Access order management portal'),
    )
  );
}

function orders_weixin_notify() {
  watchdog('weixin_notify', print_r($_REQUEST, TRUE));
  require_once 'weixin/weixin/notify.php';
  $notify = new WxPayNotifyCallBack();
  $notify->Handle(FALSE);
}

function orders_payementweixin($order) {
  module_load_include('inc', 'orders', 'includes/config');
  /*if(empty($_POST)){
      echo json_encode(['errcode' => '10012','msg' => getConfig()['10012'],'data' => []]);
  }
  $mustkey = ['orderid'];
  foreach($_POST as $k =>$v){
      if(!in_array($v, $mustkey)){
          echo json_encode(['errcode' => '10013','msg' => getConfig()['10013'],'data' => []]);exit;
      }
  }
  $orderid = $_POST['orderid'];
  $order = db_query('SELECT * from {product_order} WHERE id=:id',array(':id' => $orderid)) -> fetch();
  if(empty($order)){
      echo json_encode(['errcode' => '10014','msg' => getConfig()['10014'],'data' => []]);exit;
  }*/
  $newtime = $order->created + 30 * 60;
  $now = REQUEST_TIME;
  if ($now > $newtime) {
    cancelOrder($order);
    return services_error(t('订单支付超时'), 406);
    //echo json_encode(['errcode' => '10015','msg' => getConfig()['10015'],'data' => []]);exit;
  }
  $needkey = [
    'appid',
    'mch_id',
    'device_info',
    'nonce_str',
    'sign',
    'sign_type',
    'body',
    'detail',
    'attach',
    'out_trade_no',
    'fee_type',
    'total_fee',
    'spbill_create_ip',
    'notify_url',
    'trade_type'
  ];
  $optionalkey = [
    'device_info',
    'sign_type',
    'detail',
    'attach',
    'fee_type',
    'time_start',
    'time_expire',
    'goods_tag',
    'limit_pay'
  ];
  $weixin_settings = unserialize(variable_get('weixin_settings'));
  //print_r(session_id());
  //echo "111";
  //print_r(session_name());
  module_load_include('inc', 'orders', 'weixin/weixin');
  $attach = json_encode([
    'type' => 'consume',
    'sorderid' => $order->sorderid,
    'total_fee' => $order->total_price,
    'nid' => $order->nid,
    'orderid' => $order->id,
    'uid' => $order->uid
  ]);
  if (!isset($order->sorderid)) {
    $order->sorderid = date('YmdHis') . mt_rand(10000, 99999999);
  }
  $params = [
    'appid' => $weixin_settings['appid'],
    'much_id' => $weixin_settings['mchid'],
    'device_info' => 'WEB',
    //'nonce_str' => getRandStr(),
    'sign_type' => 'MD5',
    'body' => '测试',
    //'detail' => $detail,
    'attach' => $attach,
    'out_trade_no' => $order->sorderid,//$order -> id,
    'fee_type' => 'CNY',
    'total_fee' => $order->total_price * 100,
    'spbill_create_ip' => getenv("REMOTE_ADDR"),
    'notify_url' => $weixin_settings['notify_url'],
    'trade_type' => 'APP'
  ];
  return unifiedOrder($params);

}

function orders_test() {
  $alipay_settings = unserialize(variable_get('alipay_settings'));
  require_once 'alipay/AopSdk.php';
  $c = new AopClient;
  $c->gatewayUrl = "https://openapi.alipay.com/gateway.do";
  $c->appId = $alipay_settings['app_id'];
  $c->rsaPrivateKey = $alipay_settings['private_key'];
  $c->format = "json";
  $c->charset = "utf-8";
  //$c -> gatewayUrl = "https://openapi.alipaydev.com/gateway.do";
  //$c -> appId = "2016102900776032";
  //$c->alipayrsaPublicKey = $alipay_settings['public_key'];
  //实例化具体API对应的request类,类名称和接口名称对应,当前调用接口名称：alipay.open.public.template.message.industry.modify
  // $request = new AlipayTradeQueryRequest ();
  //$request->setBizContent("{" .
  //"    \"out_trade_no\":\"20150320010101001\"," .
  //"    \"trade_no\":\"2014112611001004680 073956707\"" .
  //"  }");
  //$request = new AlipayTradeAppPayRequest ();
  //$request->setBizContent("{" .
  //"    \"out_trade_no\":\"20150320010101001\"," .
  //"    \"trade_no\":\"2014112611001004680 073956707\"" .
  //"  }");
  //$result = $c->sdkExecute ( $request); exit;
  //var_dump($result);exit;
  $req = new AlipayTradeAppPayRequest();

  $content = [
    'product_code' => 'QUICK_MSECURITY_PAY',
    'subject' => 'test',
    'total_amount' => 0.01,
    'out_trade_no' => mt_rand(100000, 9999999)
  ];
  //print_r($content);exit;
  $biz_content = json_encode($content);
  //SDK已经封装掉了公共参数，这里只需要传入业务参数
  //此次只是参数展示，未进行字符串转义，实际情况下请转义
  $req->setBizContent($biz_content);
  $req->setReturnUrl("http://api.junashare.com/payment/callback");
  $req->setNotifyUrl($alipay_settings['notify_url']);
  $response = $c->pageExecute($req, 'GET');
  var_dump($response);
  exit;
  return $response;
//var_dump($response);exit;
  //var_dump($alipay_settings);exit;
  module_load_include('inc', 'orders', 'alipay/server/php/lib/alipay_rsa.function');
  module_load_include('inc', 'orders', 'alipay/server/php/lib/alipay_core.function');
  $config = [];
  $order = db_query("SELECT * FROM {product_order} WHERE id=:id", array(':id' => 1))->fetch();
  $config['app_id'] = $alipay_settings['app_id'];
  $config['method'] = 'alipay.trade.app.pay';
  $config['charset'] = 'utf-8';
  $config ['sign_type'] = 'RSA';
  $node = node_load($order->nid);

  $content = [
    "goods_type" => "1",
    "product_code" => "QUICK_MSECURITY_PAY",
    "seller_id" => $alipay_settings['seller_id'],
    "subject" => $node->title,
    "timeout_express" => "30m",
    "total_amount" => "0.01",
    "out_trade_no" => $order->id
  ];
  //print_r($content);exit;
  $biz_content = json_encode($content);
  $config['biz_content'] = $biz_content;
  $private_key = $alipay_settings['private_key'];
  $signparam = [
    'app_id' => '2015052600090779',
    //$alipay_settings['app_id'],
    'biz_content' => '{"timeout_express":"30m","seller_id":"","product_code":"QUICK_MSECURITY_PAY","total_amount":"0.01","subject":"1","body":"我是测试数据","out_trade_no":"IQJZSRC1YMQB5HU"}',
    //$biz_content,
    'charset' => 'utf-8',
    'format' => 'json',
    'method' => 'alipay.trade.app.pay',
    'notify_url' => 'http://domain.merchant.com/payment_notify',
    'sign_type' => 'RSA',
    'timestamp' => date('Y-m-d H:i:s', $order->created),
    'version' => '1.0',


  ];
  //print_r($alipay_settings);exit;
  //$signstr = http_build_query($signparam);
  //$signstr = createLinkstring($signparam);
  //$sign = rsaSign($signstr,$alipay_settings['private_key']);
  //$config['sign'] = $sign;
  $config['timestamp'] = date('Y-m-d H:i:s', $order->created);
  $config['version'] = '1.0';
  $config['notify_url'] = $alipay_settings['notify_url'];
  $config['sign_type'] = 'RSA';
  //$client = new AopClient();
  //$sign = $client -> rsaSign($signparam,$private_key);
  module_load_include('inc', 'orders', 'alipay/server/php/lib/alipay_submit.class');

  /* *
   * 配置文件
   * 版本：3.4
   * 日期：2016-03-08
   * 说明：
   * 以下代码只是为了方便商户测试而提供的样例代码，商户可以根据自己网站的需要，按照技术文档编写,并非一定要使用该代码。
   * 该代码仅供学习和研究支付宝接口使用，只是提供一个参考。

   * 安全校验码查看时，输入支付密码后，页面呈灰色的现象，怎么办？
   * 解决方法：
   * 1、检查浏览器配置，不让浏览器做弹框屏蔽设置
   * 2、更换浏览器或电脑，重新登录查询。
   */

//↓↓↓↓↓↓↓↓↓↓请在这里配置您的基本信息↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
// 合作身份者ID，签约账号，以2088开头由16位纯数字组成的字符串，查看地址：https://openhome.alipay.com/platform/keyManage.htm?keyType=partner
//$alipay_config['partner']       = $alipay_settings['seller_id'];

// 卖家支付宝账号，以2088开头由16位纯数字组成的字符串，一般情况下收款账号就是签约账号
//$alipay_config['seller_user_id']=$alipay_config['partner'];
  $alipay_config['key'] = $alipay_settings['private_key'];
//商户的私钥,此处填写原始私钥去头去尾，RSA公私钥生成：https://doc.open.alipay.com/doc2/detail.htm?spm=a219a.7629140.0.0.nBDxfy&treeId=58&articleId=103242&docType=1
  $alipay_config['private_key'] = $alipay_settings['private_key'];

//支付宝的公钥，查看地址：https://openhome.alipay.com/platform/keyManage.htm?keyType=partner
  $alipay_config['alipay_public_key'] = $alipay_settings['public_key'];//'MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDDI6d306Q8fIfCOaTXyiUeJHkrIvYISRcc73s3vF1ZT7XN8RNPwJxo8pWaJMmvyTn9N4HQ632qJBVHf8sxHi/fEsraprwCtzvzQETrNRwVxLO5jVmRGi60j8Ue1efIlzPXV9je9mkjzOmdssymZkh2QhUrCmZYI/FCEa3/cNMW0QIDAQAB';

// 服务器异步通知页面路径，需http://格式的完整路径，不能加?id=123这类自定义参数,必须外网可以正常访问
  $alipay_config['notify_url'] = $alipay_settings['notify_url'];

// 签名方式
  $alipay_config['sign_type'] = strtoupper('RSA');

// 退款日期 时间格式 yyyy-MM-dd HH:mm:ss
//date_default_timezone_set('PRC');//设置当前系统服务器时间为北京时间，PHP5.1以上可使用。
//$alipay_config['refund_date']=date("Y-m-d H:i:s",time());;

// 调用的接口名，无需修改
  $alipay_config['service'] = 'alipay.trade.app.pay';

//字符编码格式 目前支持 gbk 或 utf-8
  $alipay_config['input_charset'] = strtolower('utf-8');

//ca证书路径地址，用于curl中ssl校验
//请保证cacert.pem文件在当前文件夹目录中
  $alipay_config['cacert'] = getcwd() . '/cacert.pem';

//访问模式,根据自己的服务器是否支持ssl访问，若支持请选择https；若不支持请选择http
  $alipay_config['transport'] = 'http';
//↑↑↑↑↑↑↑↑↑↑请在这里配置您的基本信息↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑

  $alipaySubmit = new AlipaySubmit($alipay_config);
  $html_text = $alipaySubmit->buildRequestForm($signparam, "get", "确认");
  return $html_text;
}

function orders_pre_pay($orderid, $payment_type) {
  $order = db_query('SELECT * FROM {product_order} WHERE id=:id', array(':id' => $orderid))->fetch();
  if (!$order) {
    return services_error(t('订单id错误'), 406);
  }
  $newtime = $order->created + 30 * 60;
  $now = REQUEST_TIME;
  if ($now > $newtime) {
    $orderobj = new stdClass();
    $orderobj->id = $orderid;
    $orderobj->status = 7;
    drupal_write_record('product_order', $orderobj, 'id');
    return services_error(t('订单支付超时'), 406);
  }
  $orderobj = new stdClass();
  $orderobj->id = $orderid;
  $orderobj->payment_type = $payment_type;
  drupal_write_record('product_order', $orderobj, 'id');

  if ($payment_type == 1) {
    return _alipay_pre_pay($order);
  }
  elseif ($payment_type == 2) {
    return orders_payementweixin($order);
    //_weixin_pre_pay($order);
  }
}

function _alipay_pre_pay($order) {

  global $user;
  if (!$user->uid) {
    return services_error(t('用户未登录'), 406);
  }
  $alipay_settings = unserialize(variable_get('alipay_settings'));
  $alipay_settings['app_id'] = "2016102900776032";
  //var_dump($alipay_settings);exit;
  module_load_include('inc', 'orders', 'alipay/server/php/lib/alipay_rsa.function');
  module_load_include('inc', 'orders', 'alipay/server/php/lib/alipay_core.function');
  $node = node_load($order->nid);
  $config = [];

  $config['app_id'] = $alipay_settings['app_id'];

  $passback_params = urlencode(json_encode(array(
    'uid' => $user->uid,
    'nid' => $order->nid,
    'orderid' => $order->id,
    'total_fee' => $order->total_price * 100,

  )));

  $content = [
    'subject' => $node->title,
    'out_trade_no' => $order->sorderid,
    'timeout_express' => '30m',
    'total_amount' => '0.01',
    'seller_id' => $alipay_settings['seller_id'],
    'product_code' => 'QUICK_MSECURITY_PAY',
    'goods_type' => '1',
    'passback_params' => $passback_params
  ];
  $biz_content = json_encode($content);
  $config['biz_content'] = $biz_content;
  $private_key = $alipay_settings['private_key'];
  $signparam = [
    'app_id' => $alipay_settings['app_id'],
    'biz_content' => $biz_content,
    'charset' => 'utf-8',
    'format' => 'json',
    'method' => 'alipay.trade.app.pay',
    'notify_url' => $alipay_settings['notify_url'],
    'sign_type' => 'RSA',
    'timestamp' => date('Y-m-d H:i:s', $order->created),
    'version' => '1.0',


  ];
  $config['charset'] = 'utf-8';
  $config['format'] = 'json';
  $config['method'] = 'alipay.trade.app.pay';
  $config['notify_url'] = $alipay_settings['notify_url'];
  require_once 'alipay/AopSdk.php';
  $c = new AopClient;
  //$c->gatewayUrl = "https://openapi.alipay.com/gateway.do";
  //$c->appId = '2016111602886056';//$alipay_settings['app_id'];
  $c->gatewayUrl = "https://openapi.alipaydev.com/gateway.do";
  $c->appId = $alipay_settings['app_id'];//"2016102900776032";
  $c->rsaPrivateKey = $alipay_settings['private_key'];
  $c->format = "json";
  $c->charset = "utf-8";
  $c->alipayrsaPublicKey = $alipay_settings['public_key'];
  $sign = $c->generateSign($signparam);
  // $c ->rsaPrivateKey = $alipay_settings['private_key'];
  //$c ->rsaPrivateKey = $alipay_settings['private_key'];
  //var_dump($sign);
  //exit;
  // $c -> alipayrsaPublicKey = 'MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDgrUMJUgaYLJpSrHBY60gpoYYkTzg9Z8OBljpEbeymHt1GzD8wRdOfRUTgWNXwM9ZNsQmn18/tli6d+MXSHlzvewi7Vd322u/U1OUY0Ljv5QSIyi4nzkM2nBt2sszEWz/63CM4CEbZKQtrHM7Z3bxnJKa9LrcSUwynhXTSC+udTwIDAQAB';//$alipay_settings['public_key'];
  //$c ->rsaPrivateKey = $alipay_settings['private_key'];
  //$sign = $c -> rsaSign($signparam);
  //$config['sign'] = $sign;
  //$signstr=createLinkstring($signparam);
  //echo $signstr;
  //print_r($alipay_settings);exit;
  //$signstr = http_build_query($signparam);
  //$sign = rsaSign($signstr,$alipay_settings['private_key']);
  //$client = new AopClient();
  //pzU8DKEo2z5LciSQ23vdjP032iLVP%2BkkwjoOQVtT85gpoQB%2BwWsmUsbE1iaFBG1s0n1ZQa4b2h8YHS%2FFqrlpH6hX1ZbNw9UVy2wqz9uy9ZV2OikZeENopCQ%2B5akOoHuQKM1t2VhbgdU2nOk8BklNSYW2JH2wJ3N8ofjW0i8Ara8%3D
  //$sign = $client -> rsaSign($signparam,$private_key);
  //$sign=rsaSign($signstr, $alipay_settings['private_key']);
  //require_once 'alipay/AopSdk.php';
  //$c = new AopClient;
  //$c -> alipayrsaPublicKey = 'MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDgrUMJUgaYLJpSrHBY60gpoYYkTzg9Z8OBljpEbeymHt1GzD8wRdOfRUTgWNXwM9ZNsQmn18/tli6d+MXSHlzvewi7Vd322u/U1OUY0Ljv5QSIyi4nzkM2nBt2sszEWz/63CM4CEbZKQtrHM7Z3bxnJKa9LrcSUwynhXTSC+udTwIDAQAB';//$alipay_settings['public_key'];
  //$c ->rsaPrivateKey = $alipay_settings['private_key'];
  //$sign = $c -> rsaSign($signparam);
  //$str = '';
  //foreach($signparam as $k =>$v){
  //  if($str == ''){
  //    $str.=$k.'='.$v;
  //}else{
  //  $str.= '&'.$k.'='.$v;
  //}

  //}
  //function verify($data, $sign, $rsaPublicKeyFilePath, $signType = 'RSA') {
  //$res = $c -> verify($str,$sign);
  //var_dump($alipay_settings['private_key']);exit;
  //$res = rsaVerify($signstr,$alipay_settings['app_key'],$sign);
  //var_dump($res);exit;
  $config ['sign_type'] = 'RSA';
  $config['timestamp'] = date('Y-m-d H:i:s', $order->created);
  $config['version'] = '1.0';
  $config['sign'] = $sign;
  //module_load_include('inc','orders','alipay/server/php/lib/alipay_submit.class');

  /* *
   * 配置文件
   * 版本：3.4
   * 日期：2016-03-08
   * 说明：
   * 以下代码只是为了方便商户测试而提供的样例代码，商户可以根据自己网站的需要，按照技术文档编写,并非一定要使用该代码。
   * 该代码仅供学习和研究支付宝接口使用，只是提供一个参考。

   * 安全校验码查看时，输入支付密码后，页面呈灰色的现象，怎么办？
   * 解决方法：
   * 1、检查浏览器配置，不让浏览器做弹框屏蔽设置
   * 2、更换浏览器或电脑，重新登录查询。
   */

//↓↓↓↓↓↓↓↓↓↓请在这里配置您的基本信息↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
// 合作身份者ID，签约账号，以2088开头由16位纯数字组成的字符串，查看地址：https://openhome.alipay.com/platform/keyManage.htm?keyType=partner


//商户的私钥,此处填写原始私钥去头去尾，RSA公私钥生成：https://doc.open.alipay.com/doc2/detail.htm?spm=a219a.7629140.0.0.nBDxfy&treeId=58&articleId=103242&docType=1
  $alipay_config['private_key'] = $alipay_settings['private_key'];

//支付宝的公钥，查看地址：https://openhome.alipay.com/platform/keyManage.htm?keyType=partner
  $alipay_config['alipay_public_key'] = $alipay_settings['public_key'];

// 服务器异步通知页面路径，需http://格式的完整路径，不能加?id=123这类自定义参数,必须外网可以正常访问
  $alipay_config['notify_url'] = $alipay_settings['notify_url'];

// 签名方式
  $alipay_config['sign_type'] = strtoupper('RSA');

// 退款日期 时间格式 yyyy-MM-dd HH:mm:ss
//date_default_timezone_set('PRC');//设置当前系统服务器时间为北京时间，PHP5.1以上可使用。
  $alipay_config['refund_date'] = date("Y-m-d H:i:s", time());;

// 调用的接口名，无需修改
  $alipay_config['service'] = 'alipay.trade.app.pay';

//字符编码格式 目前支持 gbk 或 utf-8
  $alipay_config['input_charset'] = strtolower('utf-8');

//ca证书路径地址，用于curl中ssl校验
//请保证cacert.pem文件在当前文件夹目录中
  $alipay_config['cacert'] = getcwd() . '\\cacert.pem';

//访问模式,根据自己的服务器是否支持ssl访问，若支持请选择https；若不支持请选择http
  $alipay_config['transport'] = 'http';

//↑↑↑↑↑↑↑↑↑↑请在这里配置您的基本信息↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑

  /* $alipaySubmit = new AlipaySubmit($alipay_config);
$html_text = $alipaySubmit->buildRequestForm($signparam,"get", "确认");
$str = 'app_id=2015052600090779&biz_content={"timeout_express":"30m","seller_id":"","product_code":"QUICK_MSECURITY_PAY","total_amount":"0.01","subject":"1","body":"我是测试数据","out_trade_no":"IQJZSRC1YMQB5HU"}&charset=utf-8&format=json&method=alipay.trade.app.pay&notify_url=http://api.junashare.com/payment/notify&sign_type=RSA&timestamp=2016-08-25 20:26:31&version=1.0';
$sign = rsaSign($str,$alipay_settings['private_key']);
$str.='&sign='.$sign;
app_id%3D2016111602886056%26biz_content%3D%7B%22goods_type%22%3A1%2C%22passback_params%22%3A%22e19167ca387348ee9c53309da5a16fab%22%2C%22product_code%22%3A%22QUICK_MSECURITY_PAY%22%2C%22seller_id%22%3A%222088421944340625%22%2C%22subject%22%3A%22abc%22%2C%22timeout_express%22%3A%2230m%22%2C%22total_amount%22%3A0.01%2C%22out_trade_no%22%3A%221%22%7D%26charset%3Dutf-8%26format%3Djson%26method%3Dalipay.trade.app.pay%26sign_type%3DRSA%26timestamp%3D2016-11-19+18%3A36%3A02%26version%3D1%26sign%3D%22kE6ZYBXuz7SxUW7R4zrG9%2FIm0mpY9wxlqyI3ZDyJpiaoJIBAXHc3trDNbpRbXJKwydX9KSk5jeTp9TNoWpL8Gwq%2F3l%2FSQtzpHU4%2Fs2t6KIkC5bqYZUtfrCkCmdeBXB8BL%2FLkNaSmaBXJctS8h8wr%2FNKOqmIZC9CESNGenlqK8L0%3D%22%26sign_type%3DRSA*/
//$signstr = $signstr.'&sign='.'"'.$sign.'"'.'&sign_type='."RSA";
//$config['timestamp'] = str_replace(' ', '%20', $config['timestamp']);
//$str = http_build_query($config,'','%20%20');
  /*$str = 'app_id=2016111602886056&biz_content={"timeout_express":"30m","seller_id":"","product_code":"QUICK_MSECURITY_PAY","total_amount":"0.01","subject":"1","body":"test","out_trade_no":"IQJZSRC1YMQB5HU"}&charset=utf-8&format=json&method=alipay.trade.app.pay&notify_url=http://api.junashare.com/payment/notify&sign_type=RSA&timestamp=2016-08-25 20:26:31&version=1.0';
  $sign = rsaSign($str,$alipay_settings['private_key']);
  $str='app_id=2016111602886056&biz_content=%7B%22timeout_express%22%3A%2230m%22%2C%22seller_id%22%3A%22%22%2C%22product_code%22%3A%22QUICK_MSECURITY_PAY%22%2C%22total_amount%22%3A%220.01%22%2C%22subject%22%3A%221%22%2C%22body%22%3A%22%E6%88%91%E6%98%AF%E6%B5%8B%E8%AF%95%E6%95%B0%E6%8D%AE%22%2C%22out_trade_no%22%3A%22IQJZSRC1YMQB5HU%22%7D&charset=utf-8&format=json&method=alipay.trade.app.pay&notify_url=http%3A%2F%2Fdomain.merchant.com%2Fpayment_notify&sign_type=RSA&timestamp=2016-08-25%2020%3A26%3A31&version=1.0&sign='.$sign;
  $str = 'app_id=2016111602886056&biz_content=%7B%22timeout_express%22%3A%2230m%22%2C%22seller_id%22%3A%22%22%2C%22product_code%22%3A%22QUICK_MSECURITY_PAY%22%2C%22total_amount%22%3A%220.01%22%2C%22subject%22%3A%221%22%2C%22body%22%3A%22%E6%88%91%E6%98%AF%E6%B5%8B%E8%AF%95%E6%95%B0%E6%8D%AE%22%2C%22out_trade_no%22%3A%22IQJZSRC1YMQB5HU%22%7D&charset=utf-8&format=json&method=alipay.trade.app.pay&notify_url=http%3A%2F%2Fdomain.merchant.com%2Fpayment_notify&sign_type=RSA&timestamp=2016-08-25%2020%3A26%3A31&version=1.0&sign=cYmuUnKi5QdBsoZEAbMXVMmRWjsuUj%2By48A2DvWAVVBuYkiBj13CFDHu2vZQvmOfkjE0YqCUQE04kqm9Xg3tIX8tPeIGIFtsIyp%2FM45w1ZsDOiduBbduGfRo1XRsvAyVAv2hCrBLLrDI5Vi7uZZ77Lo5J0PpUUWwyQGt0M4cj8g%3D';*/
  $str = http_build_query($config, NULL, ini_get('arg_separator.output'), PHP_QUERY_RFC3986);
  return ['data' => $str];


}

function orders_notify() {
  $alipay_settings = unserialize(variable_get('alipay_settings'));
  //print_r($alipay_settings);exit;
  watchdog('alipay_notify', print_r($_POST, TRUE));
  watchdog('alipay_notify_get', print_r($_GET, TRUE));
  $_POST = Array(
    'total_amount' => 0.01,
    'buyer_id' => '2088002114070180',
    'trade_no' => '2016121121001004180225275045',
    'notify_time' => '2016-12-11 11:59:12',
    'subject' => 'NUK 学饮杯 5oz 蝴蝶款或大象款150ml',
    'sign_type' => 'RSA',
    'buyer_logon_id' => '501***@qq.com',
    'auth_app_id' => '2016111602886056',
    'charset' => 'utf-8',
    'notify_type' => 'trade_status_sync',
    'invoice_amount' => 0.01,
    'out_trade_no' => '206',
    'trade_status' => 'TRADE_SUCCESS',
    'gmt_payment' => '2016-12-11 11:59:11',
    'version' => '1.0',
    'point_amount' => 0.00,
    'sign' => 'KGF78hGTcu1Sifh2W894280mfrVnwWhkQ1Fvmb84o2Td55ncA+2qXIX1KUTHcz5rDXrbMsgmzl2AeIa7DLq4fHyTyVHB+Ub/5yTEaZOQX+xJetdhCXrO9gYTOSWmXh363UDW2QkMSKGRx7n51Bz+IfRssSSita6kj3C3AMm/Qbw=',
    'gmt_create' => '2016-12-11 11:59:10',
    'buyer_pay_amount' => 0.01,
    'receipt_amount' => 0.01,
    'passback_params' => '4f9c076db2c745b03e4456b4a13e3bbf',
    'fund_bill_list' => '[{"amount":"0.01","fundChannel":"ALIPAYACCOUNT"}]',
    'app_id' => '2016111602886056',
    'seller_id' => 2088421944340625,
    'notify_id' => '44594a6ea7e78846f37ff4e467de794he2',
    'seller_email' => 'heidy.huang@junashare.com'
  );
  require_once 'alipay/AopSdk.php';
  $c = new AopClient;
  //$c->gatewayUrl = "https://openapi.alipay.com/gateway.do";
  //$c->appId = '2016111602886056';//$alipay_settings['app_id'];
  $c->gatewayUrl = "https://openapi.alipaydev.com/gateway.do";
  $c->appId = "2016102900776032";
  $c->rsaPrivateKey = $alipay_settings['private_key'];
  $c->format = "json";
  $c->charset = "utf-8";
  $c->alipayrsaPublicKey = $alipay_settings['public_key'];
  $signparam = $_POST;
  //unset($signparam['sign_type']);
  //unset($signparam['sign']);
  ksort($signparam);
  //print_r($signparam);exit;
  //$c->alipayPublicKey = $alipay_settings['app_key'];
  //$sign = $c -> rsaCheckV1($_POST,'');
  //var_dump($sign);exit;
  $alipay_config['private_key'] = $alipay_settings['private_key'];

//支付宝的公钥，查看地址：https://openhome.alipay.com/platform/keyManage.htm?keyType=partner
  $alipay_config['alipay_public_key'] = $alipay_settings['public_key'];

// 服务器异步通知页面路径，需http://格式的完整路径，不能加?id=123这类自定义参数,必须外网可以正常访问
  $alipay_config['notify_url'] = $alipay_settings['notify_url'];

// 签名方式
  $alipay_config['sign_type'] = strtoupper('RSA');

// 退款日期 时间格式 yyyy-MM-dd HH:mm:ss
//date_default_timezone_set('PRC');//设置当前系统服务器时间为北京时间，PHP5.1以上可使用。
  $alipay_config['refund_date'] = date("Y-m-d H:i:s", time());;

// 调用的接口名，无需修改
  $alipay_config['service'] = 'alipay.trade.app.pay';

//字符编码格式 目前支持 gbk 或 utf-8
  $alipay_config['input_charset'] = strtolower('utf-8');

//ca证书路径地址，用于curl中ssl校验
//请保证cacert.pem文件在当前文件夹目录中
  $alipay_config['cacert'] = getcwd() . '\\cacert.pem';

//访问模式,根据自己的服务器是否支持ssl访问，若支持请选择https；若不支持请选择http
  $alipay_config['transport'] = 'http';
  module_load_include('inc', 'orders', 'alipay/server/php/lib/alipay_rsa.function');
  module_load_include('inc', 'orders', 'alipay/server/php/lib/alipay_core.function');
  module_load_include('inc', 'orders', 'alipay/server/php/lib/alipay_notify.class');

  $alipayNotify = new AlipayNotify($alipay_config);
  if ($alipayNotify->getResponse('44594a6ea7e78846f37ff4e467de794he2'))//判断成功之后使用getResponse方法判断l是否是支付宝发来的异步通知。
  {
    echo "aa";
    var_dump($r);
    exit;
    $content = [
      'subject' => $_POST['subject'],
      'out_trade_no' => $_POST['out_trade_no'],
      'timeout_express' => '30m',
      'total_amount' => '0.01',
      'seller_id' => $alipay_settings['seller_id'],
      'product_code' => 'QUICK_MSECURITY_PAY',
      'goods_type' => '1',
      'passback_params' => '4f9c076db2c745b03e4456b4a13e3bbf'
    ];
    $biz_content = json_encode($content);
    $config['biz_content'] = $biz_content;
    $private_key = $alipay_settings['private_key'];
    $signparam = [
      'app_id' => $alipay_settings['app_id'],
      'biz_content' => $biz_content,
      'charset' => 'utf-8',
      'format' => 'json',
      'method' => 'alipay.trade.app.pay',
      'notify_url' => $alipay_settings['notify_url'],
      'sign_type' => 'RSA',
      'timestamp' => '2016-12-11 11:57:52',
      //date('Y-m-d H:i:s',$order -> created),
      'version' => '1.0',
    ];
    $signparam = $_POST;
    unset($signparam['sign_type']);
    unset($signparam['sign']);
    if ($alipayNotify->getSignVeryfy($signparam, $_POST['sign'])) {//使用支付宝公钥验签

      //——请根据您的业务逻辑来编写程序（以下代码仅作参考）——
      //获取支付宝的通知返回参数，可参考技术文档中服务器异步通知参数列表
      //商户订单号
      $out_trade_no = $_POST['out_trade_no'];

      //支付宝交易号
      $trade_no = $_POST['trade_no'];

      //交易状态
      $trade_status = $_POST['trade_status'];
      $attach = urldecode(json_decode($_POST['passback_params']));
      if ($_POST['trade_status'] == 'TRADE_FINISHED') {

      }
      else {
        if ($_POST['trade_status'] == 'TRADE_SUCCESS') {

          $orderobj = db_query("SELECT * FROM {product_order} WHERE id=:id", array(':id' => $$attach->orderid))->fetch();
          if ($orderobj) {
            if ($orderobj->total_price == $_POST['total_amount'] && $_POST['seller_id'] == $alipay_config['partner'] && $_POST['app_id'] == $app_id) {

              $order = new stdClass();
              $order->id = $attach->orderid;
              $order->status = 1;
              $order->alipay_order_id = $trade_no;
              $order->payment_type = 1;
              drupal_write_record('product_order', $order, 'id');
              $log = db_query('SELECT * from {user_amount_log} WHERE sorderid=:sorderid', array(':sorderid' => $out_trade_no))->fetchAll();
              if (empty($log)) {
                $record = new stdClass();
                $record->uid = $attach->uid;
                $record->total_fee = $attach->total_fee;
                $record->paytype = 'alipay';
                $record->paytime = REQUEST_TIME;
                $record->nid = $attach->nid;
                $record->status = 1;
                $record->sthirdorderno = $trade_no;
                $record->type = "recharge";
                $record->sorderid = $out_trade_no;
                drupal_write_record('user_amount_log', $record);
              }
              else {
                db_update('user_amount_log')
                  ->fields(array('status' => 1, 'sthirdno' => $trade_no))
                  ->condition('sorderid', $out_trade_no)
                  ->execute();
              }
            }
          }
          echo "success";
          //判断该笔订单是否在商户网站中已经做过处理
          //如果没有做过处理，根据订单号（out_trade_no）在商户网站的订单系统中查到该笔订单的详细，并执行商户的业务程序
          //如果有做过处理，不执行商户的业务程序
          //注意：
          //付款完成后，支付宝系统发送该交易状态通知
          //请务必判断请求时的out_trade_no、total_fee、seller_id与通知时获取的out_trade_no、total_fee、seller_id为一致的
        }
        else {
          $log = db_query('SELECT * from {user_amount_log} WHERE sorderid=:sorderid', array(':sorderid' => $out_trade_no))->fetchAll();
          if (empty($log)) {
            $record = new stdClass();
            $record->uid = $attach->uid;
            $record->total_fee = $attach->total_fee;
            $record->paytype = 'alipay';
            $record->paytime = REQUEST_TIME;
            $record->nid = $attach->nid;
            $record->status = 2;
            $record->sthirdorderno = $trade_no;
            $record->type = "recharge";
            $record->sorderid = $out_trade_no;
            drupal_write_record('user_amount_log', $record);
            watchdog('weixin_recharge', "系统充值订单为:{$sOrderNo}的支付订单{$tradeNo}充值失败,失败原因:{$data['return_code']}:{$data['return_msg']}");
          }
          else {
            db_update('user_amount_log')
              ->fields(array('status' => 2, 'sthirdno' => $trade_no))
              ->condition('sorderid', $out_trade_no)
              ->execute();
          }
        }
      }
      //——请根据您的业务逻辑来编写程序（以上代码仅作参考）——
      echo "fail";     //请不要修改或删除
    }
    else //验证签名失败
    {
      echo "sign fail";
    }
  }
  else //验证是否来自支付宝的通知失败
  {
    return 'success';
  }

}

function orders_callback() {
  return "成功";
}

function orders_alipay_settings_form($form, &$form_state) {
  $alipay_config = unserialize(variable_get('alipay_settings'));
  $form['app_id'] = array(

    '#type' => 'textfield',

    '#title' => t('应用app_id'),

    '#default_value' => (!empty($alipay_config)) ? $alipay_config['app_id'] : '',

    '#size' => 60,

    '#maxlength' => 128,

    '#required' => TRUE,

  );

  $form['app_key'] = array(

    '#type' => 'textfield',

    '#title' => t('app公钥'),

    '#default_value' => (!empty($alipay_config)) ? $alipay_config['app_key'] : '',

    '#size' => 60,

    '#maxlength' => 1000,

    '#required' => TRUE,

  );
  $form['public_key'] = array(

    '#type' => 'textfield',

    '#title' => t('支付公钥'),

    '#default_value' => (!empty($alipay_config)) ? $alipay_config['public_key'] : '',

    '#size' => 60,

    '#maxlength' => 1000,

    '#required' => TRUE,

  );
  $form['private_key'] = array(

    '#type' => 'textfield',

    '#title' => t('支付私钥'),

    '#default_value' => (!empty($alipay_config)) ? $alipay_config['private_key'] : '',

    '#size' => 60,

    '#maxlength' => 1000,

    '#required' => TRUE,

  );
  $form['seller_id'] = array(

    '#type' => 'textfield',

    '#title' => t('商户id'),

    '#default_value' => (!empty($alipay_config)) ? $alipay_config['seller_id'] : '',

    '#size' => 60,

    '#maxlength' => 128,

    '#required' => TRUE,

  );
  $form['notify_url'] = array(

    '#type' => 'textfield',

    '#title' => t('notify_url'),

    '#default_value' => (!empty($alipay_config)) ? $alipay_config['notify_url'] : '',

    '#size' => 60,

    '#maxlength' => 128,

    '#required' => TRUE,

  );

  $form['submit'] = array('#type' => 'submit', '#value' => t('保存配置'));
  return $form;
}

function orders_alipay_settings_form_submit($form, &$form_state) {
  $values = serialize($form_state['values']);
  variable_set('alipay_settings', $values);
  drupal_set_message('支付宝配置保存成功');
}

function orders_weixin_settings_form($form, &$form_state) {
  $weixin_config = unserialize(variable_get('weixin_settings'));
  $form['appid'] = array(

    '#type' => 'textfield',

    '#title' => t('应用app_id'),

    '#default_value' => (!empty($weixin_config)) ? $weixin_config['appid'] : '',

    '#size' => 60,

    '#maxlength' => 128,

    '#required' => TRUE,

  );
  $form['mchid'] = array(

    '#type' => 'textfield',

    '#title' => t('商户id'),

    '#default_value' => (!empty($weixin_config)) ? $weixin_config['mchid'] : '',

    '#size' => 60,

    '#maxlength' => 1000,

    '#required' => TRUE,

  );
  $form['key'] = array(

    '#type' => 'textfield',

    '#title' => t('app key'),

    '#default_value' => (!empty($weixin_config)) ? $weixin_config['key'] : '',

    '#size' => 60,

    '#maxlength' => 1000,

    '#required' => TRUE,

  );
  $form['appsecret'] = array(

    '#type' => 'textfield',

    '#title' => t('appsecret'),

    '#default_value' => (!empty($weixin_config)) ? $weixin_config['appsecret'] : '',

    '#size' => 60,

    '#maxlength' => 128,

    '#required' => TRUE,

  );

  $form['notify_url'] = array(

    '#type' => 'textfield',

    '#title' => t('notify_url'),

    '#default_value' => (!empty($weixin_config)) ? $weixin_config['notify_url'] : '',

    '#size' => 60,

    '#maxlength' => 128,

    '#required' => TRUE,

  );

  $form['submit'] = array('#type' => 'submit', '#value' => t('保存配置'));
  return $form;
}

function orders_weixin_settings_form_submit($form, &$form_state) {
  $values = serialize($form_state['values']);
  variable_set('weixin_settings', $values);
  drupal_set_message('微信配置保存成功');
}

function orders_lists($pages = 1, $status = NULL) {
  global $user;
  if (!$user->uid) {
    return services_error(t('用户未登录'), 406);
  }
  /*  $query = db_select('product_order','po');
    $query->join('node', 'n', 'po.nid = n.nid');
    $query -> fields(array('po','n.title'));
    $limit = 10;
    $query -> condition('po.uid',$user-> uid,'=');
    if(is_null($status)){

    }else{
        $query -> condition('po.status',$status,'=');
    }
    $pages = intval($pages);
    if($pages<=1){
        $pages= 1;
    }
    $offset = ($pages-1)*$limit;
    $query -> range($offset,$limit);
    $res = $query -> execute();
    $data = $res -> fetchAll();*/
  $uid = $user->uid;
  $pages = intval($pages);
  if ($pages <= 1) {
    $pages = 1;
  }
  $limit = 10;
  $offset = ($pages - 1) * $limit;

  if (!isset($status)) {
    $r = db_query_range('SELECT p.*,n.title,fm.uri FROM {product_order} p LEFT JOIN {node} n ON p.nid=n.nid LEFT JOIN field_data_field_image_for_list fdfp ON fdfp.entity_id=p.nid LEFT JOIN file_managed fm ON fdfp.field_image_for_list_fid=fm.fid where p.uid=:uid', $offset, $limit, array(':uid' => $uid));
  }
  else {
    $r = db_query_range("SELECT p.*,n.title,fm.uri FROM {product_order} p LEFT JOIN {node} n ON p.nid=n.nid LEFT JOIN field_data_field_image_for_list fdfp ON fdfp.entity_id=p.nid LEFT JOIN file_managed fm ON fdfp.field_image_for_list_fid=fm.fid where p.uid=:uid and p.status=:status", $offset, $limit, array(
      ":uid" => $uid,
      ':status' => $status
    ));
  }
  $data = $r->fetchAll();
  $now = REQUEST_TIME;
  foreach ($data as $k => $v) {
    $time = $v->created + 30 * 60;
    if ($now > $time && $v->status == 0) {
      cancelOrder($v);
      $v->status = 7;
    }
  }
  if (!isset($status)) {
    $r = db_query_range('SELECT p.*,n.title,fm.uri FROM {product_order} p LEFT JOIN {node} n ON p.nid=n.nid LEFT JOIN field_data_field_image_for_list fdfp ON fdfp.entity_id=p.nid LEFT JOIN file_managed fm ON fdfp.field_image_for_list_fid=fm.fid where p.uid=:uid', $offset, $limit, array(':uid' => $uid));
  }
  else {
    $r = db_query_range("SELECT p.*,n.title,fm.uri FROM {product_order} p LEFT JOIN {node} n ON p.nid=n.nid LEFT JOIN field_data_field_image_for_list fdfp ON fdfp.entity_id=p.nid LEFT JOIN file_managed fm ON fdfp.field_image_for_list_fid=fm.fid where p.uid=:uid and p.status=:status", $offset, $limit, array(
      ":uid" => $uid,
      ':status' => $status
    ));
  }
  $data = $r->fetchAll();
  foreach ($data as $k => $v) {
    //0为已提交待付款，1为已付款，2,待发货，3为待收货，4为已评价,5为交易完成，6为已取消，7为待评价


    switch ($v->product_type) {
      case 'product':
        $data[$k]->product_type = '壹购商品';
        switch ($v->status) {
          case 0:
            $data[$k]->status = '待付款';
            break;
          case 1:
            $data[$k]->status = '已付款';
            break;
          case 2:
            $data[$k]->status = '待发货';
            break;
          case 3:
            $data[$k]->status = '待收货';
            break;
          case 4:
            $data[$k]->status = '已评价';
            break;
          case 5:
            $data[$k]->status = '交易完成';
            break;
          case 6:
            $data[$k]->status = '待评价';
          case 7:
            $data[$k]->status = '已取消';
            break;
          default:
            $data[$k]->status = '待付款';
            break;
        }
        break;
      case 'share_product':
        $data[$k]->product_type = '白领商品';
        switch ($v->status) {
          case 0:
            $data[$k]->status = '待发货';
            break;
          case 1:
            $data[$k]->status = '待发货';
            break;
          case 2:
            $data[$k]->status = '待发货';
            break;
          case 3:
            $data[$k]->status = '待收货';
            break;
          case 4:
            $data[$k]->status = '已评价';
            break;
          case 5:
            $data[$k]->status = '交易完成';
            break;
          case 6:
            $data[$k]->status = '已取消';
          case 7:
            $data[$k]->status = '待评价';
            break;
          default:
            $data[$k]->status = '待付款';
            break;
        }
        break;

      default:
        $data[$k]->product_type = '壹购商品';
        break;
    }
    if ($v->uri) {
      $data[$k]->uri = file_create_url($v->uri);
    }

  }
  return ['success' => 1, 'data' => $data];
}

function orders_update($orderid, $update_data) {
  global $user;
  if (!$user->uid) {
    return services_error(t('用户未登录'), 406);
  }
  $valid_update_fields = ['status', 'payment_type'];
  foreach ($update_data as $k => $v) {
    if (!in_array($k, $update_data)) {
      unset($update_data[$k]);
    }
  }
  $update_data = _services_arg_value($update_data, 'data');
  $data['id'] = $orderid;
  $data = (object) $update_data;
  $r = drupal_write_record('product_order', $update_data, 'id');
  return ['success' => 1];
}

/**
 * 生成支付宝订单
 */
function orders_alipay_buy() {
  /*module_load_include( 'inc','orders','alipay/server/php/lib/alipay_core.funcction');
   module_load_include( 'inc','orders','alipay/server/php/lib/alipay_md5.funcction');
   module_load_include( 'inc','orders','alipay/server/php/lib/alipay_submit.class');
   module_load_include( 'inc','orders','alipay/server/php/lib/alipay_rsa.function');

   $alipay_config['partner']		= '2088421944340625';

// 卖家支付宝账号，以2088开头由16位纯数字组成的字符串，一般情况下收款账号就是签约账号

   $alipay_config['seller_user_id']=$alipay_config['partner'];

// MD5密钥，安全检验码，由数字和字母组成的32位字符串，查看地址：https://b.alipay.com/order/pidAndKey.htm
   $alipay_config['key']			= file_get_contents(getcwd().'/rsa_private_key.pem');
// 服务器异步通知页面路径，需http://格式的完整路径，不能加?id=123这类自定义参数,必须外网可以正常访问
   $alipay_config['notify_url']="http://商户网关网址/refund_fastpay_by_platform_pwd-PHPUTF-8/notify_url.php";

// 签名方式
   $alipay_config['sign_type']    = strtoupper('MD5');

// 退款日期 时间格式 yyyy-MM-dd HH:mm:ss
//date_default_timezone_set('PRC');//设置当前系统服务器时间为北京时间，PHP5.1以上可使用。
   $alipay_config['refund_date']=date("Y-m-d H:i:s",time());;

// 调用的接口名，无需修改
   $alipay_config['service']='alipay.trade.pay';

//字符编码格式 目前支持 gbk 或 utf-8
   $alipay_config['input_charset']= strtolower('utf-8');

//ca证书路径地址，用于curl中ssl校验
//请保证cacert.pem文件在当前文件夹目录中
   $alipay_config['cacert']    = getcwd().'\\cacert.pem';

//访问模式,根据自己的服务器是否支持ssl访问，若支持请选择https；若不支持请选择http
   $alipay_config['transport']    = 'http';
   // echo rsaSign('app_id=2015052600090779&biz_content=%7B%22timeout_express%22%3A%2230m%22%2C%22seller_id%22%3A%22%22%2C%22product_code%22%3A%22QUICK_MSECURITY_PAY%22%2C%22total_amount%22%3A%220.01%22%2C%22subject%22%3A%221%22%2C%22body%22%3A%22%E6%88%91%E6%98%AF%E6%B5%8B%E8%AF%95%E6%95%B0%E6%8D%AE%22%2C%22out_trade_no%22%3A%22IQJZSRC1YMQB5HU%22%7D&charset=utf-8&format=json&method=alipay.trade.app.pay&notify_url=http%3A%2F%2Fdomain.merchant.com%2Fpayment_notify&sign_type=RSA&timestamp=2016-08-25%2020%3A26%3A31&version=1.0', $alipay_config['key']);exit;

   $parameter = array(
       "service" => 'alipay.trade.pay',
       "partner" => $alipay_config['partner'],
       "notify_url"	=> 'http://商户网关网址/refund_fastpay_by_platform_pwd-PHPUTF-8/notify_url.php',
       "seller_user_id"	=> $alipay_config['seller_user_id'],
       "refund_date"	=>  $alipay_config['refund_date'],
       "batch_no"	=> '1',
       "batch_num"	=> '1',
       "detail_data"	=> '',
       "_input_charset"	=>'utf-8'

   );*/
  /*    $s = 'app_id=2014072300007148&biz_content={"button":[{"actionParam":"ZFB_HFCZ","actionType":"out","name":"话费充值"},{"name":"查询","subButton":[{"actionParam":"ZFB_YECX","actionType":"out","name":"余额查询"},{"actionParam":"ZFB_LLCX","actionType":"out","name":"流量查询"},{"actionParam":"ZFB_HFCX","actionType":"out","name":"话费查询"}]},{"actionParam":"http://m.alipay.com","actionType":"link","name":"最新优惠"}]}&charset=GBK&method=alipay.mobile.public.menu.add&sign_type=RSA&timestamp=2014-07-24 03:07:50&version=1.0';
      $sign = md5($s);*/
  /*  $parameter['sign'] = rsaSign($s,$alipay_config['key']);
//建立请求
   $alipaySubmit = new AlipaySubmit($alipay_config);
    $html_text = $alipaySubmit->buildRequestForm($parameter,"get", "确认");
    echo $html_text;exit;*/
  require_once('alipay/AopSdk.php');
  $c = new AopClient;
//$c->gatewayUrl = "https://openapi.alipay.com/gateway.do";
//$c->appId = "2016111602886056";
  $c->gatewayUrl = "https://openapi.alipaydev.com/gateway.do";
  $c->appId = "2016102900776032";
  $private_key = file_get_contents(getcwd() . '/rsa_private_key.pem');
  $private_key = str_replace("-----BEGIN RSA PRIVATE KEY-----", "", $private_key);
  $private_key = str_replace("-----END RSA PRIVATE KEY-----", "", $private_key);
  $private_key = str_replace("\n", "", $private_key);
  $c->rsaPrivateKey = $private_key;
//$private_key="-----BEGIN RSA PRIVATE KEY-----".PHP_EOL .$private_key. PHP_EOL."-----END RSA PRIVATE KEY-----";
//var_dump($private_key);
  $c->rsaPrivateKeyFilePath = getcwd() . '/rsa_private_key.pem';
  $c->format = "json";
  $c->charset = "UTF-8";
  $alipay_public_key = file_get_contents(getcwd() . '/rsa_public_key.pem');
  $alipay_public_key = str_replace("-----BEGIN PUBLIC KEY-----", "", $alipay_public_key);
  $alipay_public_key = str_replace("-----END PUBLIC KEY-----", "", $alipay_public_key);
  $alipay_public_key = str_replace("\n", "", $alipay_public_key);
//$c ->rsaPrivateKeyFilePath = getcwd().'/rsa_private_key.pem';
//$alipay_public_key='-----BEGIN PUBLIC KEY-----'.PHP_EOL.wordwrap($alipay_public_key, 64, "\n", true) .PHP_EOL.'-----END PUBLIC KEY-----';
//echo $alipay_public_key;
  $c->alipayPublicKey = file_get_contents(getcwd() . '/rsa_public_key.pem');
//$c->alipayrsaPublicKey = 'MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDDI6d306Q8fIfCOaTXyiUeJHkrIvYISRcc73s3vF1ZT7XN8RNPwJxo8pWaJMmvyTn9N4HQ632qJBVHf8sxHi/fEsraprwCtzvzQETrNRwVxLO5jVmRGi60j8Ue1efIlzPXV9je9mkjzOmdssymZkh2QhUrCmZYI/FCEa3/cNMW0QIDAQAB';
//实例化具体API对应的request类,类名称和接口名称对应,当前调用接口名称：alipay.open.public.template.message.industry.modify
//$c -> alipayPublicKey = 'MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDDI6d306Q8fIfCOaTXyiUeJHkrIvYISRcc73s3vF1ZT7XN8RNPwJxo8pWaJMmvyTn9N4HQ632qJBVHf8sxHi/fEsraprwCtzvzQETrNRwVxLO5jVmRGi60j8Ue1efIlzPXV9je9mkjzOmdssymZkh2QhUrCmZYI/FCEa3/cNMW0QIDAQAB';
  /*$request = new AlipayTradeQueryRequest ();
  $request->setBizContent("{" .
  "    \"out_trade_no\":\"20150320010101001\"," .
  "    \"trade_no\":\"2014112611001004680 073956707\"" .
  "  }");
  $result = $c->execute ( $request); */
  $request = new AlipayUserInfoAuthRequest ();
  /*$request->setBizContent("{" .
  "    \"grant_type\":\"authorization_code\"," .
  "    \"code\":\"1cc19911172e4f8aaa509c8fb5d12F56\"," .
  "    \"refresh_token\":\"201509BBdcba1e3347de4e75ba3fed2c9abebE36\"" .
  "  }");*/
  $request->setBizContent("{" .
    "      \"scopes\":[" .
    "        \"auth_base\"" .
    "      ]," .
    "    \"state\":\"init\"" .
    "  }");
  $result = $c->pageExecute($request, 'GET');
  header('Location:' . $result);
  var_dump($result);
  exit;
  $responseNode = str_replace(".", "_", $request->getApiMethodName()) . "_response";
  $resultCode = $result->$responseNode->code;
  var_dump($result);
  if (!empty($resultCode) && $resultCode == 10000) {
    echo "成功";
  }
  else {
    echo "失败";
  }
  print_r($response);
  exit;
  $aop = new AopClient ();
  $aop->gatewayUrl = 'https://openapi.alipay.com/gateway.do';
  $aop->appId = '2016111602886056';
  $aop->rsaPrivateKeyFilePath = getcwd() . '/rsa_private_key.pem';
  $private_key = file_get_contents(getcwd() . '/rsa_private_key.pem');

  $public_key = file_get_contents(getcwd() . '/rsa_public_key.pem');
  /*$public_key=str_replace("-----BEGIN RSA PRIVATE KEY-----","",$public_key);
  $public_key=str_replace("-----END RSA PRIVATE KEY-----","",$public_key);
  $public_key=str_replace("\n","",$public_key);*/

  //$aop->alipayrsaPublicKey = $private_key;
  $aop->alipayPublicKey = $public_key;
  $aop->apiVersion = '1.0';
  //var_dump(file_exists($aop->rsaPrivateKeyFilePath));
  $aop->postCharset = 'UTF-8';
  $aop->format = 'json';
  //$aop -> signType = 'RSA';
  $request = new AlipayTradePayRequest ();
  $request->setNotifyUrl('http://api.junashare.com/payment/notify');
  $request->setBizContent("{" .
    "    \"out_trade_no\":\"20150320010101001\"," .
    "    \"scene\":\"bar_code,wave_code\"," .
    "    \"auth_code\":\"28763443825664394\"," .
    "    \"subject\":\"Iphone6 16G\"," .
    "    \"seller_id\":\"2088102146225135\"," .
    "    \"total_amount\":88.88," .
    "    \"discountable_amount\":8.88," .
    "    \"undiscountable_amount\":80.00," .
    "    \"body\":\"Iphone6 16G\"," .
    "      \"goods_detail\":[{" .
    "                \"goods_id\":\"apple-01\"," .
    "        \"alipay_goods_id\":\"20010001\"," .
    "        \"goods_name\":\"ipad\"," .
    "        \"quantity\":1," .
    "        \"price\":2000," .
    "        \"goods_category\":\"34543238\"," .
    "        \"body\":\"特价手机\"," .
    "        \"show_url\":\"http://www.alipay.com/xxx.jpg\"" .
    "        }]," .
    "    \"operator_id\":\"yx_001\"," .
    "    \"store_id\":\"NJ_001\"," .
    "    \"terminal_id\":\"NJ_T_001\"," .
    "    \"alipay_store_id\":\"2016041400077000000003314986\"," .
    "    \"extend_params\":{" .
    "      \"sys_service_provider_id\":\"2088511833207846\"," .
    "      \"hb_fq_num\":\"3\"," .
    "      \"hb_fq_seller_percent\":\"100\"" .
    "    }," .
    "    \"timeout_express\":\"90m\"," .
    "    \"royalty_info\":{" .
    "      \"royalty_type\":\"ROYALTY\"," .
    "        \"royalty_detail_infos\":[{" .
    "                    \"serial_no\":1," .
    "          \"trans_in_type\":\"userId\"," .
    "          \"batch_no\":\"123\"," .
    "          \"out_relation_id\":\"20131124001\"," .
    "          \"trans_out_type\":\"userId\"," .
    "          \"trans_out\":\"2088101126765726\"," .
    "          \"trans_in\":\"2088101126708402\"," .
    "          \"amount\":0.1," .
    "          \"desc\":\"分账测试1\"," .
    "          \"amount_percentage\":\"100\"" .
    "          }]" .
    "    }," .
    "    \"sub_merchant\":{" .
    "      \"merchant_id\":\"19023454\"" .
    "    }" .
    "  }");
  $result = $aop->execute($request);
  $responseNode = str_replace(".", "_", $request->getApiMethodName()) . "_response";
  $resultCode = $result->$responseNode->code;
  print_r($result);
  if (!empty($resultCode) && $resultCode == 10000) {
    echo "成功";
  }
  else {
    echo "失败";
  }
}

/**
 * 支付宝退款
 */
function _alipay_refund() {
  require_once('alipay/AopSdk.php');
  $aop = new AopClient ();
  $aop->gatewayUrl = 'https://openapi.alipay.com/gateway.do';
  $aop->appId = 'your app_id';
  $aop->rsaPrivateKeyFilePath = 'merchant_private_key_file';
  $aop->alipayPublicKey = 'alipay_public_key_file';
  $aop->apiVersion = '1.0';
  $aop->postCharset = 'GBK';
  $aop->format = 'json';
  $request = new AlipayTradeRefundRequest ();
  $request->setBizContent("{" .
    "    \"out_trade_no\":\"20150320010101001\"," .
    "    \"trade_no\":\"2014112611001004680073956707\"," .
    "    \"refund_amount\":200.12," .
    "    \"refund_reason\":\"正常退款\"," .
    "    \"out_request_no\":\"HZ01RF001\"," .
    "    \"operator_id\":\"OP001\"," .
    "    \"store_id\":\"NJ_S_001\"," .
    "    \"terminal_id\":\"NJ_T_001\"" .
    "  }");
  $result = $aop->execute($request);

  $responseNode = str_replace(".", "_", $request->getApiMethodName()) . "_response";
  $resultCode = $result->$responseNode->code;
  if (!empty($resultCode) && $resultCode == 10000) {
    echo "成功";
  }
  else {
    echo "失败";
  }
}

/**
 * @支付宝订单查询
 */
function _alipay_orders_query() {
  require_once('alipay/AopSdk.php');
  $aop = new AopClient ();
  $aop->gatewayUrl = 'https://openapi.alipay.com/gateway.do';
  $aop->appId = 'your app_id';
  $aop->rsaPrivateKeyFilePath = 'merchant_private_key_file';
  $aop->alipayPublicKey = 'alipay_public_key_file';
  $aop->apiVersion = '1.0';
  $aop->postCharset = 'GBK';
  $aop->format = 'json';
  $request = new AlipayTradeQueryRequest ();
  $request->setBizContent("{" .
    "    \"out_trade_no\":\"20150320010101001\"," .
    "    \"trade_no\":\"2014112611001004680 073956707\"" .
    "  }");
  $result = $aop->execute($request);
}

/**
 * @支付宝退款查询
 */
function _alipay_orders_refund_query() {
  require_once('alipay/AopSdk.php');
  $aop = new AopClient ();
  $aop->gatewayUrl = 'https://openapi.alipay.com/gateway.do';
  $aop->appId = 'your app_id';
  $aop->rsaPrivateKeyFilePath = 'merchant_private_key_file';
  $aop->alipayPublicKey = 'alipay_public_key_file';
  $aop->apiVersion = '1.0';
  $aop->postCharset = 'GBK';
  $aop->format = 'json';
  $request = new AlipayTradeFastpayRefundQueryRequest ();
  $request->setBizContent("{" .
    "    \"trade_no\":\"20150320010101001\"," .
    "    \"out_trade_no\":\"2014112611001004680073956707\"," .
    "    \"out_request_no\":\"2014112611001004680073956707\"" .
    "  }");
  $result = $aop->execute($request);

  $responseNode = str_replace(".", "_", $request->getApiMethodName()) . "_response";
  $resultCode = $result->$responseNode->code;
  if (!empty($resultCode) && $resultCode == 10000) {
    echo "成功";
  }
  else {
    echo "失败";
  }
}

function cancelOrder($data) {
  $orderobj = new stdClass();
  $orderobj->id = $data->id;
  $orderobj->status = 7;//已取消
  drupal_write_record('product_order', $orderobj, 'id');
  $node = node_load($data->nid);
  $node->field_remain_num['und'][0]['value'] = $node->field_remain_num['und'][0]['value'] + 1;
  node_save($node);
}

function orders_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'seller_node_form') {
    // print_r($form_state['node']);
    /*
    <script type="text/javascript">

 //为地图注册click事件获取鼠标点击出的经纬度坐标
 var clickEventListener = map.on('click', function(e) {
     document.getElementById("lnglat").value = e.lnglat.getLng() + ',' + e.lnglat.getLat()
 });
 var auto = new AMap.Autocomplete({
     input: "tipinput"
 });
 AMap.event.addListener(auto, "select", select);//注册监听，当选中某条记录时会触发
 function select(e) {
     if (e.poi && e.poi.location) {
         map.setZoom(15);
         map.setCenter(e.poi.location);
     }
 }
</script>
<script type="text/javascript">
 //地图加载
 var map = new AMap.Map("container", {
     resizeEnable: true
 });
 //输入提示
 var autoOptions = {
     input: "tipinput"
 };
 var auto = new AMap.Autocomplete(autoOptions);
 var placeSearch = new AMap.PlaceSearch({
     map: map
 });  //构造地点查询类
 AMap.event.addListener(auto, "select", select);//注册监听，当选中某条记录时会触发
 function select(e) {
     placeSearch.setCity(e.poi.adcode);
     placeSearch.search(e.poi.name);  //关键字查询查询
 }
</script>*/
//    $form['contact_information'] = array(
//
//      '#markup' => '',
//      '#prefix' => '<div id="maps" style="height:500px;">',
//      '#suffix' => '</div>',
//      '#weight' => 10
//
//    );
    /*
    <script>
        var marker, map = new AMap.Map("container", {
            resizeEnable: true,
            center: [116.397428, 39.90923],
            zoom: 13
        });
        AMap.event.addDomListener(document.getElementById('addMarker'), 'click', function() {
            addMarker();
        }, false);
        AMap.event.addDomListener(document.getElementById('updateMarker'), 'click', function() {
            marker && updateMarker();
        }, false);
        AMap.event.addDomListener(document.getElementById('clearMarker'), 'click', function() {
            if (marker) {
                marker.setMap(null);
                marker = null;
            }
        }, false);

        // 实例化点标记
        function addMarker() {
            if (marker) {
                return;
            }
            marker = new AMap.Marker({
                icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
                position: [116.405467, 39.907761]
            });
            marker.setMap(map);
        }

        function updateMarker() {
            // 自定义点标记内容
            var markerContent = document.createElement("div");

            // 点标记中的图标
            var markerImg = document.createElement("img");
            markerImg.className = "markerlnglat";
            markerImg.src = "http://webapi.amap.com/theme/v1.3/markers/n/mark_r.png";
            markerContent.appendChild(markerImg);

            // 点标记中的文本
            var markerSpan = document.createElement("span");
            markerSpan.className = 'marker';
            markerSpan.innerHTML = "Hi，我换新装备啦！";
            markerContent.appendChild(markerSpan);

            marker.setContent(markerContent); //更新点标记内容
            marker.setPosition([116.391467, 39.927761]); //更新点标记位置
        }
    </script>
    05ffecae96c4cc9b02d31186fe67d5e0*/
//    drupal_add_js('http://webapi.amap.com/maps?v=1.3&key=73d66e3914afe6e65a55602ae48c9b65&plugin=AMap.Autocomplete,AMap.PlaceSearch', array(
//      'type' => 'external',
//      'scope' => 'footer'
//    ));
//    drupal_add_js('http://cache.amap.com/lbs/static/addToolbar.js', array('type' => 'external', 'scope' => 'footer'));
//    if (!empty($form_state['node']->nid)) {
//      drupal_add_js('var mark,map = new AMap.Map("maps", {resizeEnable: true,center: [' . $form_state['node']->field_lnt['und'][0]['value'] . ', ' . $form_state['node']->field_lat['und'][0]['value'] . '],zoom:13});', array(
//        'type' => 'inline',
//        'scope' => 'footer'
//      ));
//      drupal_add_js('new AMap.Marker({map: map,position: [' . $form_state['node']->field_lnt['und'][0]['value'] . ', ' . $form_state['node']->field_lat['und'][0]['value'] . '],icon: new AMap.Icon({size: new AMap.Size(40, 50), image: "http://webapi.amap.com/theme/v1.3/images/newpc/way_btn2.png",imageOffset: new AMap.Pixel(0, -60)})});', array(
//        'type' => 'inline',
//        'scope' => 'footer'
//      ));
//    }
//    else {
//      drupal_add_js('var map = new AMap.Map("maps", {resizeEnable: true,zoom:9,center: [121.29, 31.14],});', array(
//        'type' => 'inline',
//        'scope' => 'footer'
//      ));
//    }
//
//    drupal_add_js(' var clickEventListener = map.on("click", function(e) {document.getElementById("edit-field-lnt-und-0-value").value = e.lnglat.getLng(); document.getElementById("edit-field-lat-und-0-value").value=e.lnglat.getLat()});var auto = new AMap.Autocomplete({input: "edit-field-addr-und-0-value"});AMap.event.addListener(auto, "select", select);function select(e) {if (e.poi && e.poi.location) {map.setZoom(15);map.setCenter(e.poi.location);}}', array(
//      'type' => 'inline',
//      'scope' => 'footer'
//    ));

  }
}

<?php
function juna_private_message_services_resources() {
  return array(
    'mymessage' => array(
      'operations' => array(
        'index' => array(
          'help' => t('我的私信'),
          'callback' => 'juna_private_message_my_message',
          'access arguments' => array('access content'),
          'args' => array(
            array(
              'name' => 'page',
              'optional' => TRUE,
              'type' => 'int',
              'description' => 'The zero-based index of the page to get, defaults to 0.',
              'default value' => 1,
              'source' => array('param' => 'page'),
            ),
          )
        ),
      ),
      'actions' => array(
        'update' => array(
          'help' => t('私信设置为已读'),
          'callback' => 'juna_private_message_setread_message',
          'access arguments' => array('access content'),
          'args' => array(
            array(
              'name' => 'tid',
              'optional' => FALSE,
              'source' => array('data' => 'tid'),
              'description' => t('私信thred id'),
              'type' => 'int',
            ),
          ),
        )
      ),
    ),
  );
}

function juna_private_message_setread_message($tid){
  global $user;
  if(!$user->uid){
    return services_error(t('用户未登陆'), 403);
  }
  $query = db_select('pm_index', 'pt');
  $query->condition('pt.thread_id', $tid)
    ->fields('pt', array('mid'));
  $res = $query -> execute()->fetchAllAssoc('mid');
  $mid = [];
  foreach($res as $k =>$v){
    privatemsg_message_change_status($v->mid,PRIVATEMSG_READ);
  }

  return ['data'=>1];
  //var_dump($thread);
}
/**
 * Implementation of /luckdraw/result/%nid
 * @param $yaoxiang_nid
 * @return string
 */
function juna_private_message_my_message($page=1) {
  global $user;
  if(!$user->uid){
    return services_error(t('用户未登陆'), 403);
  }
  if ($page > 1) {
    $page--;
  }
  else {
    $page = 1;
  }
  $list = privatemsg_sql_list($user)->execute()->fetchAll();
  return ['data'=>$list];
}
